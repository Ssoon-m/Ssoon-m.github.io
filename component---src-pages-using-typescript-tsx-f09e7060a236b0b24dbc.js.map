{"version":3,"file":"component---src-pages-using-typescript-tsx-f09e7060a236b0b24dbc.js","mappings":"gMA8CA,UAjCwD,SAAC,GAAD,IACtDA,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,SAFsD,OAItDC,EAAAA,EAAAA,IAACC,IAAD,MACED,EAAAA,EAAAA,IAACE,EAAAA,EAAD,CAAKC,MAAM,sBACXH,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,oBACkBA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,2BAElBA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,6CAC2CA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,YAD3C,2CAE8BA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,YAF9B,sCAGUA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,oBAHV,OAKAA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,6CAC2CA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,cAD3C,qBAEUA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,cAFV,iBAE8CA,EAAAA,EAAAA,IAAAA,OAAAA,KAAAA,YAF9C,WAIAA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,iCAC+BA,EAAAA,EAAAA,IAAAA,OAAAA,KAAOD,EAASK,UAD/C,uBAEYN,EAAKO,KAAKC,UAFtB,MAIAN,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,kCACkC,KAChCA,EAAAA,EAAAA,IAAAA,IAAAA,CAAGO,KAAK,6CAAR,kCAFF,MAOAP,EAAAA,EAAAA,IAACQ,EAAAA,KAAD,CAAMC,GAAG,KAAT,8B,8FC9BJ,SAASP,EAAT,GAAkD,IAAD,IAAlCQ,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMT,EAAS,EAATA,MAC9BE,GAASQ,EAAAA,EAAAA,gBAAe,YAAxBR,KAcFS,EAAkBJ,GAAeL,EAAKU,aAAaL,YACnDM,EAAY,UAAGX,EAAKU,oBAAR,aAAG,EAAmBZ,MAExC,OACE,QAAC,IAAD,CACEc,eAAgB,CACdN,KAAAA,GAEFR,MAAOA,EACPe,cAAeF,EAAY,QAAWA,EAAiB,KACvDJ,KAAM,CACJ,CACEO,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASjB,GAEX,CACEkB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAf,EAAKU,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASN,IAEXS,OAAOX,KAKfV,EAAIsB,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s / ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["data","location","___EmotionJSX","Layout","Seo","title","pathname","site","buildTime","href","Link","to","description","lang","meta","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"sourceRoot":""}